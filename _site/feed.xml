<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The journey of a restless mind</title>
    <description>A personal blog about my experience as a resident apprentice at 8th Light
</description>
    <link>http://demonh3x.github.io//</link>
    <atom:link href="http://demonh3x.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 22 Apr 2015 10:04:59 +0100</pubDate>
    <lastBuildDate>Wed, 22 Apr 2015 10:04:59 +0100</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Uncertainty</title>
        <description>&lt;p&gt;I was trying to make the AI in the tic tac toe game run fast. It was infinitelly slow. I had the hope that by implementing alpha-beta pruning would make it faster. And it did. After that it took about 15 seconds to make a move in the worse case scenario. It was a big improvement from before. But 15 seconds is too much for a user to wait. Something was not working as expected; it should be much faster.&lt;/p&gt;

&lt;p&gt;At that point I was lost. In addition to alpha-beta pruning I tried to use cache to improve the performance, but that did not make any noticeable difference. It was slow! I had no idea about what was wrong with it. I was overwhelmed by the problem and the situation. I really hate that situation.&lt;/p&gt;

&lt;p&gt;After disconnecting from the problem for a day or two I was ready to face it again. Now with fresh thoughts. With that and more research on optimised algorithms for tic tac toe I realised that my implementation was only pruning half of what it could. What a stupid mistake! Fixing that improved the speed a lot. And then I decided to use properly the tool for this job: &lt;a href=&quot;https://github.com/ruby-prof/ruby-prof&quot;&gt;a profiler&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The information provided by the profiler pointed to the places where most of the time was spent. Having that precise feedback I was able to try different alternatives and see the difference they made. Now I was making progress! No more uncertainty.&lt;/p&gt;

&lt;p&gt;The lesson learned here is: when lost, the things that will help you get through that are: disconnecting from the problem and resting, conversations with fellow programmers, researching for information and using tools to get more feedback on your situation. Seem obvious, but in the middle of a tough situation is harder to realise it.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Apr 2015 11:00:00 +0100</pubDate>
        <link>http://demonh3x.github.io//8thlight/2015/04/22/uncertainty.html</link>
        <guid isPermaLink="true">http://demonh3x.github.io//8thlight/2015/04/22/uncertainty.html</guid>
        
        
        <category>8thlight</category>
        
      </item>
    
      <item>
        <title>Obscure algorithms</title>
        <description>&lt;p&gt;I’ve been implementing this tic tac toe AI that needs to play in a 4 by 4 board.
It has to be perfect. It has to be fast. And the combination of those things is what makes it difficult.&lt;/p&gt;

&lt;p&gt;One of the problems is that if you use a simple recursive algorithm to analise all the combinations in the game, it will take forever in a 4 by 4 board. They are too many combinations. So, you have to find ways to do less processing. The one I chose was to implement &lt;a href=&quot;http://en.wikipedia.org/wiki/Alpha%E2%80%93beta_pruning&quot;&gt;minimax with alpha-beta pruning&lt;/a&gt;. But that algorithm is too technical and too academic for someone who has no deep understanding on mathematics like me.&lt;/p&gt;

&lt;p&gt;Because I needed to implement it in a way that I could be sure it was going to work as expected, I first had to understand what I was trying to do. Understanding why the algorithm works is an interesting challenge.
If you haven’t seen &lt;a href=&quot;http://en.wikipedia.org/wiki/Alpha%E2%80%93beta_pruning&quot;&gt;alpha-beta pruning&lt;/a&gt; before, try to make sense out of what alpha and beta mean and how they work in that context. They are names that depend very heavily on the reader to understand uncommon concepts. I still don’t know the real mathematic meaning behind them.&lt;/p&gt;

&lt;p&gt;Like most algorithms, the mechanics are very logical and human-like thinking. But the notation and implementation obscures very heavily that meaning.
After spending a full day of work trying to make sense out of it I got an idea. You don’t need any mathematics to understand it. You only need to be human and have a bit of logic.&lt;/p&gt;

&lt;p&gt;Minimax is based on the thinking that I’m going to choose the best option that I have available and that I can suppose the opponent is going to choose the worse option for me. If the opponent chooses something less bad, that’s better for me.&lt;/p&gt;

&lt;p&gt;Given those decisions, I know that I am not going to choose the options that are worse for me.
So, if I have the option to choose between a draw or a lose, as soon as I know a path gives the opponent the chance to defeat me I don’t need to look further: I prefer the draw for now. Similarly, I don’t need to look further into the paths that are not going to improve a previous alternative.&lt;/p&gt;

&lt;p&gt;If the opponent can choose between a path that may give me a better outcome than other alternatives, the opponent is going to choose an alternative. As soon as I know the opponent is not going to choose that path with better outcome for me I can stop looking further.&lt;/p&gt;

&lt;p&gt;Also, if the opponent has the chance to win, no other option that he may choose is going to be worse than that. As soon as I know he may win, I can stop looking for more options that he may choose in that situation. And the opposite also applies: If I know I can choose to win, I can stop looking for alternatives: I know I’m going to choose to win.&lt;/p&gt;

&lt;p&gt;That’s it, nothing less and nothing more.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Apr 2015 00:00:00 +0100</pubDate>
        <link>http://demonh3x.github.io//8thlight/2015/04/21/obscure-algorithms.html</link>
        <guid isPermaLink="true">http://demonh3x.github.io//8thlight/2015/04/21/obscure-algorithms.html</guid>
        
        
        <category>8thlight</category>
        
      </item>
    
      <item>
        <title>Innovate</title>
        <description>&lt;p&gt;We know that, usually, there can be several different solutions to a problem. Each one with a different set of pros and cons.&lt;/p&gt;

&lt;p&gt;I think most of us – problem solvers –, in our experience, have been spoiled by seeing an external solution. At least once. If we try to solve the problem again, most probably, we may end up copying the same solution. Once that happens, it is difficult to see alternatives.&lt;/p&gt;

&lt;p&gt;When I want a different solution or I want to expand my knowledge, I try to do the following:&lt;/p&gt;

&lt;p&gt;Think on the problem that I want to solve. I think of &lt;code&gt;what&lt;/code&gt; I want – that may be composed of more little &lt;code&gt;what&lt;/code&gt; pieces. Then I think of &lt;code&gt;how&lt;/code&gt; that solution solved those.&lt;/p&gt;

&lt;p&gt;If we think of what a solution is, we may describe it as a set of decisions on &lt;code&gt;how&lt;/code&gt; to solve each one of the little &lt;code&gt;what&lt;/code&gt; pieces. &lt;a href=&quot;https://twitter.com/worrydream/status/452877691440492544&quot;&gt;Most of the innovations are made by trying to solve a &lt;code&gt;what&lt;/code&gt; with more information than the original solver had at the moment&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once I have those, I try to think of alternative &lt;code&gt;how&lt;/code&gt;s. Only by choosing a different &lt;code&gt;how&lt;/code&gt; on one &lt;code&gt;what&lt;/code&gt;, It is very possible to end with a different solution. The more different the solution you want it to be, the more &lt;code&gt;how&lt;/code&gt; you are going to need to change.&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Apr 2015 11:30:00 +0100</pubDate>
        <link>http://demonh3x.github.io//8thlight/2015/04/14/innovate.html</link>
        <guid isPermaLink="true">http://demonh3x.github.io//8thlight/2015/04/14/innovate.html</guid>
        
        
        <category>8thlight</category>
        
      </item>
    
      <item>
        <title>Maybe</title>
        <description>&lt;p&gt;&lt;a href=&quot;/8thlight/2015/04/08/higher-order-functions-i.html&quot;&gt;In the last blog post&lt;/a&gt; I was writing about the smell of using if statements when a value may be present or not.&lt;/p&gt;

&lt;p&gt;In this blog post I’m going to let the code speak by itself.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Author&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Maybe&lt;/span&gt;
   
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;just&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Mateu&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;author&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Author&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;change&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;I don&amp;#39;t know&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/demonh3x/b0ef3ba310757bf8a020&quot;&gt;See the magic here&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 09 Apr 2015 02:30:00 +0100</pubDate>
        <link>http://demonh3x.github.io//8thlight/2015/04/09/maybe.html</link>
        <guid isPermaLink="true">http://demonh3x.github.io//8thlight/2015/04/09/maybe.html</guid>
        
        
        <category>8thlight</category>
        
      </item>
    
      <item>
        <title>Higher-order functions I</title>
        <description>&lt;p&gt;Having the possibility to use functions as values in a programming language enables us to make &lt;a href=&quot;http://en.wikipedia.org/wiki/Higher-order_function&quot;&gt;higher-order functions&lt;/a&gt;. That’s a fancy way of saying that we can do &lt;strong&gt;functions that receive functions as parameters or return functions&lt;/strong&gt;. Having that feature unveils interesting benefits.&lt;/p&gt;

&lt;p&gt;Let’s start with a problem I faced today in Ruby. Let’s suposse we have a class like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Game&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_finished?&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# code ommited&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;result&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# code ommited&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;is_finished?&lt;/code&gt; method tells us if the &lt;code&gt;Game&lt;/code&gt; has concluded. Returning &lt;code&gt;false&lt;/code&gt; means that there is no result yet and if you call the &lt;code&gt;result&lt;/code&gt; method it may return &lt;code&gt;nil&lt;/code&gt; or something without real meaning. You have to wait for &lt;code&gt;is_finished?&lt;/code&gt; to return &lt;code&gt;true&lt;/code&gt; to be able to see the real &lt;code&gt;result&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That means that every user of that class is going to contain this kind of code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_finished?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;do_something_with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Each time some part of the code needs to access to &lt;code&gt;game.result&lt;/code&gt;, it is forced to check if the &lt;code&gt;game.is_finished?&lt;/code&gt; before it can do something with the result.&lt;/p&gt;

&lt;p&gt;Something smells in there… and not only because the users are forced to duplicate the if statement, but also because it seems to violate &lt;a href=&quot;http://c2.com/cgi/wiki?TellDontAsk&quot;&gt;tell don’t ask&lt;/a&gt;: the users are asking the game for two things instead of telling it what to do.&lt;/p&gt;

&lt;p&gt;So, I followed those smells and using higher-order functions (blocks/lambdas in Ruby) came up with this idea:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Game&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;when_finished&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_finished?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_finished?&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# code ommited&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;result&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# code ommited&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That changes the way the users interact with it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;when_finished&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_something_with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With this we have reduced the smells we were noticing.&lt;/p&gt;

&lt;p&gt;But there is more. We forgot the &lt;code&gt;else&lt;/code&gt;. What if the user of that code wants to do something else when the game is not finished? Because the implementation of &lt;code&gt;when_finished&lt;/code&gt; evaluates to &lt;code&gt;nil&lt;/code&gt; when is not finished, we can do the following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;when_finished&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_something_with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_something_else&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That works as we expect because the &lt;code&gt;||&lt;/code&gt; operator is &lt;a href=&quot;http://en.wikipedia.org/wiki/Lazy_evaluation&quot;&gt;lazy&lt;/a&gt;. It only evaluates the right operand (&lt;code&gt;do_something_else&lt;/code&gt;) when the left operand (&lt;code&gt;game.when_finished {|result| do_something_with result}&lt;/code&gt;) is falsey.&lt;/p&gt;

&lt;p&gt;This syntax may be a bit forced, and this might be evolved to something else, &lt;em&gt;maybe&lt;/em&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Apr 2015 01:30:00 +0100</pubDate>
        <link>http://demonh3x.github.io//8thlight/2015/04/08/higher-order-functions-i.html</link>
        <guid isPermaLink="true">http://demonh3x.github.io//8thlight/2015/04/08/higher-order-functions-i.html</guid>
        
        
        <category>8thlight</category>
        
      </item>
    
      <item>
        <title>Efficient teaching</title>
        <description>&lt;p&gt;Anyone in a civilization has been exposed to someone with more experience and understanding at some point. &lt;a href=&quot;http://en.wikipedia.org/wiki/Civilization#Cultural_identity&quot;&gt;Great human civilizations&lt;/a&gt; have been build with the power of that knowledge. Those who knew something that others didn’t, shared it for the greater good of their community.&lt;/p&gt;

&lt;p&gt;The learning process depends in a lot of factors. Some factors are in the student, some are in the teacher, some are in the communication, some are in the society.&lt;/p&gt;

&lt;p&gt;If you find yourself teaching and you really want to share what you know, there are some things you need to keep in mind:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The audience needs to be willing to learn.&lt;/li&gt;
  &lt;li&gt;It is not enough to have the understanding, you have to be able to explain it in a way that is easy for others to understand.&lt;/li&gt;
  &lt;li&gt;To explain the main concept, you may need to provide the missing gaps in the audience’s knowledge, and that implies being able to identify them as soon as they appear.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have those in mind &lt;strong&gt;you are in the right track&lt;/strong&gt;. Although &lt;strong&gt;it can be better&lt;/strong&gt;: you can use a bit of psychology.&lt;/p&gt;

&lt;p&gt;We are humans. We are social-driven species. Your interactions with your students are an essential part in the success of your teaching.
Have you ever wondered why so many kids think a teacher holds animosity toward them? &lt;em&gt;even if that is not true&lt;/em&gt;? (Are you sure it isn’t?)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You have to be in a relationship with your students that &lt;a href=&quot;https://psychologies.co.uk/self/how-to-boost-your-natural-feelgood-chemicals.html&quot;&gt;feels good&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;You need to &lt;a href=&quot;http://en.wikipedia.org/wiki/Educational_psychology#Motivation&quot;&gt;motivate&lt;/a&gt; your students.&lt;/li&gt;
  &lt;li&gt;You should &lt;a href=&quot;http://ecomba.pro/2015/03/14/care/&quot;&gt;transmit your enthusiasm&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you think the students are the only ones responsible for that, think again: Do you really care of the &lt;strong&gt;success of your students&lt;/strong&gt;? Yo may be creating animosity towards your students.&lt;/p&gt;

&lt;p&gt;In some places, the reputation of a teacher is measured by the amount of students that have successfully learnt from him/her. The core concept is true. Although, it can be easily distorted if the rewards are related to that measure.&lt;/p&gt;

&lt;p&gt;Even if you have a good relationship with your students, there is a mistake that can destroy all the previous motivation.
I still find myself making it sometimes. But when I notice it, I try to fix it asap. That mistake is in how the feedback is given. And I see it quite frequently in the way other people give feedback.&lt;/p&gt;

&lt;p&gt;If you are a person with an &lt;a href=&quot;http://blog.8thlight.com/kevin-liddle/2013/02/18/we-are-principled-1.html&quot;&gt;always-improve mentality&lt;/a&gt; you may be making the same mistake. It may be related with the self-critical mental process: When I do something, I look for things that I can improve and then try to do it. That leaves me in a never-ending process. If I want to finish what I’m doing, I have to decide when it is good enough &lt;em&gt;for the time being&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;So, when I made the mistake in giving feedback, I followed the same process: I was looking for things to improve. I omitted the things that are good. And I did not consider if it was good enough. I assumed that the needed information were only the things that can be improved.&lt;/p&gt;

&lt;p&gt;If you mention only the things that can be improved, the main idea is: &lt;code&gt;you have things that are wrong and you better change them&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you make explicit that &lt;em&gt;it may be good enough&lt;/em&gt; or &lt;em&gt;is his decision to improve it&lt;/em&gt; and provide suggestions on how to face it, the idea is: &lt;code&gt;it is not bad, but it can be improved and you will have my support&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And if you add on top of that the good things, the idea is: &lt;code&gt;it is good, and we can make it much better&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I think you can see the motivation outcome that is going to be from each one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://open.bufferapp.com/how-to-give-receive-feedback-work/&quot;&gt;Healthy&lt;/a&gt; &lt;a href=&quot;http://www.entrepreneur.com/article/219437&quot;&gt;feedback&lt;/a&gt; is as important as anything else&lt;/strong&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 07 Apr 2015 02:00:00 +0100</pubDate>
        <link>http://demonh3x.github.io//8thlight/2015/04/07/efficient-teaching.html</link>
        <guid isPermaLink="true">http://demonh3x.github.io//8thlight/2015/04/07/efficient-teaching.html</guid>
        
        
        <category>8thlight</category>
        
      </item>
    
      <item>
        <title>Investing in craftsmanship</title>
        <description>&lt;p&gt;When you think about working for a company, I’m pretty sure you expect to provide some kind of value to them. You may be developing products or doing some kind of service. Something that results in a near-term profit. And that expectation will be reinforced by the fact that you are being paid.&lt;/p&gt;

&lt;p&gt;What would you think from a business perspective of a company that has &lt;strong&gt;learning&lt;/strong&gt; as the only one initial expectation from their employees? &lt;a href=&quot;https://www.linkedin.com/groups/CFO-asks-his-CEO-What-3044917.S.49056143&quot;&gt;It may sound like a very bad decision, right?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What would you think from a client perspective of a company that lets any new employee to do work on your project. Would you trust a newcomer doing work for you? What if the newcomer is not prepared enough?&lt;/p&gt;

&lt;p&gt;How would you feel if the only expectation from you at your job is to learn while most of your workmates are providing value? And what if you even consume other workmates’ work time?&lt;/p&gt;

&lt;p&gt;One might think learning is one’s responsibility. As such, one should do it as an investment on oneself. And I completely agree. Given that we are in a &lt;a href=&quot;http://idratherbewriting.com/2007/07/24/the-rapidly-changing-pace-of-technology-some-thoughts-on-our-response-to-it/&quot;&gt;profession that changes rapidly&lt;/a&gt;, if you don’t invest in your own business – yourself as a professional – &lt;a href=&quot;http://www.petrikainulainen.net/software-development/learning/5-things-i-do-to-stay-relevant/&quot;&gt;you will be out of the game soon&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But that doesn’t mean that any software company can avoid supporting that. Their business is at stake.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Apr 2015 00:00:00 +0100</pubDate>
        <link>http://demonh3x.github.io//8thlight/2015/04/02/investing-in-craftsmanship.html</link>
        <guid isPermaLink="true">http://demonh3x.github.io//8thlight/2015/04/02/investing-in-craftsmanship.html</guid>
        
        
        <category>8thlight</category>
        
      </item>
    
      <item>
        <title>Two better than one</title>
        <description>&lt;p&gt;When I face a problem that I don’t understand, my thoughts become very unclear and I start trying to make sense to the pieces of the problem.&lt;/p&gt;

&lt;p&gt;In that process, some pieces may be quite clear from the beginning. I suppose that is because they have similarities with previously learnt concepts. But there are a lot of gaps between those.
While trying to fit those pieces I enter in a quite abstract way of thinking. The closest way I found to describe it is that: I try to identify the concepts and discover the relationships between them. Because I don’t know if it has a name, I’m going to call it &lt;strong&gt;“discovery”&lt;/strong&gt; mode.&lt;/p&gt;

&lt;p&gt;My experience in that &lt;em&gt;“discovery”&lt;/em&gt; mode is that it is very unfocused. I can fall out of the main area pretty easily and move to discover other related pieces that are irrelevant to the problem.&lt;/p&gt;

&lt;p&gt;I found out that pairing in understanding a problem, makes my &lt;em&gt;“discovery”&lt;/em&gt; mode not lose track that easily. It becomes more focused because there is always the need to communicate the discoveries you are making and to learn what the pair has discovered.&lt;/p&gt;

&lt;p&gt;Also, because I have to communicate what I’m thinking, any inconsistencies can be captured by myself or the pair at that moment. If the discoveries seem correct, that communication reinforces them.&lt;/p&gt;

&lt;p&gt;Why am I writing about this? Today, &lt;a href=&quot;http://c-j-j.github.io/&quot;&gt;Chris Jordan&lt;/a&gt; asked me to pair with him to understand better the &lt;a href=&quot;http://en.wikipedia.org/wiki/Mastermind_%28board_game%29&quot;&gt;mastermind&lt;/a&gt; game and the &lt;a href=&quot;http://en.wikipedia.org/wiki/Negamax&quot;&gt;negamax&lt;/a&gt; approach to implement the AI algorithm that solves the &lt;a href=&quot;http://en.wikipedia.org/wiki/Mastermind_%28board_game%29&quot;&gt;mastermind&lt;/a&gt; &lt;em&gt;“secret code”&lt;/em&gt;. Neither of us knew how to do it.&lt;/p&gt;

&lt;p&gt;We started by looking at a description of the algorithm but, like most of those descriptions, it was too academic and abstract. &lt;a href=&quot;http://www.goodreads.com/quotes/286395-an-expert-is-a-man-who-tells-you-a-simple&quot;&gt;That made it confusing&lt;/a&gt;. So we started bouncing the pieces we were extracting of that. And then we tried to understand them. We had to put examples to communicate with each other. Those examples were incomplete – like our understanding. But they were good enough to enter in the &lt;em&gt;“discovery”&lt;/em&gt; mode. When someone discovered (understood) some part, he explained to the pair in a simple enough way for him to understand.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/notes/912024212163777/&quot;&gt;That way we learnt faster that any of us would separately.&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 31 Mar 2015 00:55:00 +0100</pubDate>
        <link>http://demonh3x.github.io//8thlight/2015/03/31/two-better-than-one.html</link>
        <guid isPermaLink="true">http://demonh3x.github.io//8thlight/2015/03/31/two-better-than-one.html</guid>
        
        
        <category>8thlight</category>
        
      </item>
    
      <item>
        <title>Indirection</title>
        <description>&lt;p&gt;I was working on the ruby &lt;a href=&quot;http://en.wikipedia.org/wiki/Tic-tac-toe&quot;&gt;tic tac toe&lt;/a&gt; exercise with the &lt;a href=&quot;http://en.wikipedia.org/wiki/Minimax&quot;&gt;minimax&lt;/a&gt; algorithm. And I started by TDDing the minimax algorithm directly through the payoff score for each given board state. That way I had a class with the algorithm but that class was not conforming to the &lt;code&gt;Player&lt;/code&gt; contract. So, I had to create a &lt;code&gt;PerfectPlayer&lt;/code&gt; class that conforms with the &lt;code&gt;Player&lt;/code&gt; contract and uses the &lt;code&gt;Minimax&lt;/code&gt; strategy.&lt;/p&gt;

&lt;p&gt;Because there is also a random player, both algorithms can be abstracted to a &lt;code&gt;Strategy&lt;/code&gt; layer. That means that the &lt;code&gt;Player&lt;/code&gt; can become an &lt;a href=&quot;http://en.wikipedia.org/wiki/Adapter_pattern&quot;&gt;adapter&lt;/a&gt; from &lt;code&gt;Strategy&lt;/code&gt; to &lt;code&gt;Player&lt;/code&gt;. With that, we have:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game (1 class)&lt;/strong&gt; -&lt;em&gt;uses&lt;/em&gt;-&amp;gt; &lt;strong&gt;Player (1 class)&lt;/strong&gt; -&lt;em&gt;uses&lt;/em&gt;-&amp;gt; &lt;strong&gt;Strategy (N classes)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This adds a layer of indirection from &lt;code&gt;Game&lt;/code&gt; to &lt;code&gt;Strategy&lt;/code&gt; called &lt;code&gt;Player&lt;/code&gt;. That layer has a cost in complexity, understanding and maintenance. Unless there is a good reason to keep that, it can be simplified to:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game (1 class)&lt;/strong&gt; -&lt;em&gt;uses&lt;/em&gt;-&amp;gt; &lt;strong&gt;Player (N classes)&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Mar 2015 16:30:00 +0000</pubDate>
        <link>http://demonh3x.github.io//8thlight/2015/03/27/indirection.html</link>
        <guid isPermaLink="true">http://demonh3x.github.io//8thlight/2015/03/27/indirection.html</guid>
        
        
        <category>8thlight</category>
        
      </item>
    
      <item>
        <title>Codebar</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://codebar.io/&quot;&gt;Codebar&lt;/a&gt; is a free, weekly, software development workshop based in London where voluntary coaches and interested students meet to enhance the community.&lt;/p&gt;

&lt;p&gt;Some of the students have a very basic level. &lt;a href=&quot;http://demonh3x.github.io/8thlight/2015/03/13/kickstart-a-new-language.html&quot;&gt;If you’re conscious about the frustration and difficulties happening at the beginning&lt;/a&gt;, you know that having someone to help you understand and not get frustrated is a really important aspect in that process.&lt;/p&gt;

&lt;p&gt;Today is the third time I go to these workshops as a coach.&lt;/p&gt;

&lt;p&gt;I’m addicted to the joy and satisfaction when I’m able to transform ideas into reality. I also love that thrilling sensation when discovering completely new things.&lt;/p&gt;

&lt;p&gt;Making other people feel those sensations is not the same as experiencing them yourself but it is not that far. I can empathize with them and be infected with their feelings.&lt;/p&gt;

&lt;p&gt;That makes me happy and proud of what they can accomplish.&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Mar 2015 18:00:00 +0000</pubDate>
        <link>http://demonh3x.github.io//8thlight/2015/03/25/codebar.html</link>
        <guid isPermaLink="true">http://demonh3x.github.io//8thlight/2015/03/25/codebar.html</guid>
        
        
        <category>8thlight</category>
        
      </item>
    
  </channel>
</rss>
